# # Run nginx worker processes as non-root for security
# user nginx;

# # Auto-scale worker processes based on available CPU cores
# worker_processes auto;

# # Error log configuration
# error_log /var/log/nginx/error.log warn;

# # PID file location (default is fine for Alpine)
# pid /var/run/nginx.pid;

# # Event configuration
# events {
#     worker_connections 1024;
# }

# # Main HTTP context (all web server configs live here)
# http {
#     # MIME types for serving files correctly
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     # Logging
#     access_log /var/log/nginx/access.log;

#     # Use sendfile() syscall to efficiently send files
#     sendfile        on;

#     # Keep connections open for reuse
#     keepalive_timeout  65;

#     # Improve SSL security (for modern clients)
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;

#     # Load per-site configs dynamically
#     include /etc/nginx/http.d/*.conf;
# }


# Block all HTTP (port 80) traffic with a 403 Forbidden response
server {
    listen 80;                      # Listen on port 80 (HTTP)

    return 403;                     # Immediately return a 403 Forbidden for any HTTP request
}

# Handle HTTPS traffic securely
server {
    listen 443 ssl;                 # Listen on port 443 (HTTPS) with SSL enabled
    listen [::]:443 ssl;            # Listen on IPv6 port 443 with SSL enabled
    server_name ${DOMAIN_NAME};     # The server's domain name (passed via env variable)

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/cert.crt;        # Path to SSL certificate
    ssl_certificate_key /etc/nginx/ssl/cert.key;    # Path to SSL private key

    ssl_protocols TLSv1.2 TLSv1.3;                  # Enable only TLS 1.2 and 1.3 protocols (secure)
    ssl_prefer_server_ciphers on;                   # Prefer server-defined cipher order

    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256";
                                                # Strong cipher suites for encryption

    root /var/www/html;                             # Web root directory for serving files

    index index.php index.html index.htm;           # Default index files to look for

    # Main location block for all requests
    location / {
        try_files $uri $uri/ =404;                  # Try to serve the file or directory, else return 404
    }

    # Handle PHP files
    location ~ \.php$ {
        include fastcgi.conf;                       # Include standard FastCGI parameters
        fastcgi_pass wordpress:9000;                # Forward PHP requests to the PHP-FPM service (named 'wordpress')
        fastcgi_index index.php;                    # Default PHP file to execute
    }

     # Adminer proxy
    location /adminer {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: WebSocket support (not strictly needed for Adminer but harmless)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
